#!/bin/bash
#
# To submit this job, issue: "qsub [this-file-path]"
#
# http://services.tacc.utexas.edu/index.php/longhorn-user-guide
#-----------------------------------------------------------------------------
#
#$ -V                               # Inherit the submission environment
#$ -cwd                             # Start job in submission dir
#$ -N tmlarge                       # Job name
#$ -j y                             # Combine stderr and stdout into stdout
#$ -o $HOME/$JOB_NAME.out           # Name of the output file
#$ -pe 1way 8                   # Request (cores)/8 machines
#$ -q largemem                        # Submit to the "hadoop" queue (largemem is another queue)
#$ -P hpc                          # Project name (Longhorn types: vis, data, gpgpu, hpc)
#$ -l h_rt=8:00:00              # runtime (hh:mm:ss)
#$ -A TeXIT             # set in profile_user.sh from /share/sge6.2/default/acct/map/ files

#. $HOME/tacc-hadoop/hadoop-conf/hadoop-env.sh

echo "Executing $JOB_NAME ($JOB_ID) at: `date`"
export NAMENODE=`hostname -s`
echo "Hostname of namenode: $NAMENODE"

# set memory limits to 95% of total memory to prevent node death
NODE_MEMORY=`free -k | grep ^Mem: | awk '{ print $2; }'`
NODE_MEMORY_LIMIT=`echo "0.95 * $NODE_MEMORY / 1" | bc`
ulimit -v $NODE_MEMORY_LIMIT -m $NODE_MEMORY_LIMIT
echo "memory limit set to $NODE_MEMORY_LIMIT kilobytes"

# set wayness, used for ibrun
WAYNESS=`echo $PE | perl -pe 's/([0-9]+)way/\1/;'`
echo "set wayness to $WAYNESS"

# $PE_HOSTFILE is a special env variable only available in this script, which is something like:
#   /share/sge/execd_spool//i182-401/active_jobs/743637.1/pe_hostfile
ln -sf $PE_HOSTFILE /tmp/pe_hostfile

#start-cluster.sh

# notify the user when ready (thanks roller!), if they specified a PROWL_API_KEY variable in the environment
if [[ -n "$PROWL_API_KEY" ]]; then
  curl -f https://api.prowlapp.com/publicapi/add \
    -d apikey="$PROWL_API_KEY" \
    -d application="TACC - $NAMENODE" \
    -d event="Job Status Alert" \
    -d description="Ready with $JOB_NAME (`date`)"
fi

sleep `expr 8 \\* 3600 - 60` # sleep for the duration, minus a minute to cool off

#stop-cluster.sh

echo "Finished executing $JOB_NAME ($JOB_ID) at: `date`"
